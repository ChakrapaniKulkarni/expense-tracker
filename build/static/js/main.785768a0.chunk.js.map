{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","payload","filter","transaction","id","InitialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpense","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","console","log","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.785768a0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <h2>Expense Tracker</h2>\r\n        </div>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            };\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer, createContext } from 'react';\r\nimport AppReducer from './AppReducer';\r\nconst InitialState = {\r\n    transactions: [\r\n    ]\r\n}\r\n//Create Context\r\nexport const GlobalContext = createContext(InitialState);\r\n\r\n//Create Provider\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, InitialState);\r\n\r\n    //Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: \"DELETE_TRANSACTION\",\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: \"ADD_TRANSACTION\",\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nexport const IncomeExpense = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n    ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">${expense}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nexport const Transaction = ({ transaction }) => {\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    return (\r\n        <div>\r\n            <li className={transaction.amount > 0 ? \"plus\" : \"minus\"}>\r\n                {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n                <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    console.log(transactions);\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {\r\n                    transactions.map((transaction) => (<Transaction key={transaction.id} transaction={transaction}></Transaction>))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n        addTransaction(newTransaction);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpense } from './components/IncomeExpense';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\nfunction App() {\n  return (\n    <GlobalProvider >\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense></IncomeExpense>\n        <TransactionList></TransactionList>\n        <AddTransaction></AddTransaction>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}